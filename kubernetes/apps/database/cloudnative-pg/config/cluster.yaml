---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
spec:
  instances: 3
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:16.2-v0.2.1
  # imageName: ghcr.io/cloudnative-pg/postgresql:16.2
  primaryUpdateStrategy: unsupervised
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  storage:
    size: 32Gi
    storageClass: ceph-block
  postgresql:
    shared_preload_libraries:
      - "vectors.so"
    parameters:
      max_connections: "200"
      shared_buffers: 256MB
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 500m
      memory: 1024Mi
    limits:
      memory: 2048Mi
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 14d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 4
      destinationPath: s3://cloudnative-pg/
      endpointURL: http://192.168.10.42:9000/
      # Note: serverName version needs to be inccemented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster postgres-v2
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: s3_access_key
        secretAccessKey:
          name: cloudnative-pg-secret
          key: s3_secret_access_key
  bootstrap:
    recovery:
      source: &previousCluster postgres-v1
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        <<: *barmanObjectStore
        serverName: *previousCluster
  inheritedMetadata:
    annotations:
      kyverno.io/exclude: "true"
