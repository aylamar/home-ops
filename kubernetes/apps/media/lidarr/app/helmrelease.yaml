---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-4.2.0/charts/library/common/values.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lidarr
spec:
  releaseName: *app
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  maxHistory: 2
  install:
    remediation:
      retries: 3
  rollback:
    cleanupOnFail: true
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
    controllers:
      lidarr:
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/lidarr
              tag: 3.0.0.4855@sha256:2f7f6ad08afa31d1822c93dfd31f1c8e9f9df0cb054784c7960f964819649808
            env:
              TZ: America/Chicago
              PUID: 568
              PGID: 568
              LIDARR__PORT: &port 8686
            envFrom:
              - secretRef:
                  name: lidarr-secret
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                cpu: 250m
                memory: 1024Mi
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Lidarr
          gethomepage.dev/icon: lidarr.svg
          gethomepage.dev/description: Music management
          gethomepage.dev/widget.type: lidarr
          gethomepage.dev/widget.url: "http://lidarr.media.svc.cluster.local:8686"
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_LIDARR_TOKEN}}` }}"
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            192.168.0.0/16,172.16.0.0/12,10.0.0.0/8
        hosts:
          - host: &host lidarr.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: *app
      cache:
        existingClaim: lidarr-cache
        globalMounts:
          - path: /config/MediaCover
      tmp:
        type: emptyDir
      downloads:
        type: nfs
        server: "192.168.10.42"
        path: /mnt/data/media
        globalMounts:
          - path: /media
