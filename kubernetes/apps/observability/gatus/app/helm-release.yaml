apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gatus
spec:
  releaseName: *app
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  dependsOn:
  - name: cloudnative-pg
    namespace: database
  maxHistory: 2
  install:
    remediation:
      retries: 3
  rollback:
    cleanupOnFail: true
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      gatus:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
            - secretRef:
                name: gatus-secret
          # TODO: Convert this to a proper 'sidecar' container someday
          init-config:
            dependsOn: init-db
            image: &configSyncImage
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.28.4@sha256:20caf4e241e1f9f9231527db5e75b735aa7b0da7bee3d262cbe369bb9b33469f
            env: &configSyncEnv
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: LIST
            resources: &resources
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                memory: 256Mi
        containers:
          app:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.14.0@sha256:acc0c116458a8d65ce48f7caea13881afa20bf5a405bb95230c51430eb9e2313
            env:
              TZ: America/Chicago
              GATUS_CONFIG_PATH: /config
              CUSTOM_WEB_PORT: &port 80
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: &path /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources: *resources
          config-sync:
            image: *configSyncImage
            env:
              !!merge <<: *configSyncEnv
              METHOD: WATCH
            securityContext: *securityContext
            resources: *resources
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        serviceName: *app
        enabled: false
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Monitoring
          gethomepage.dev/name: Gatus
          gethomepage.dev/icon: gatus.svg
          gethomepage.dev/description: Uptime monitoring
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            192.168.0.0/16,172.16.0.0/12,10.0.0.0/8
        hosts:
        - host: &host status.${SECRET_DOMAIN}
          paths:
          - path: /
            service:
              identifier: app
              port: http
        tls:
        - hosts:
          - *host
    serviceAccount:
      create: true
      name: gatus
    persistence:
      config:
        enabled: true
        type: emptyDir
      config-file:
        type: configMap
        name: gatus-config-map
        globalMounts:
        - path: /config/config.yaml
          subPath: config.yaml
